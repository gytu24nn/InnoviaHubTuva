// <auto-generated />
using System;
using BackEnd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEnd.Migrations
{
    [DbContext(typeof(InnoviaHubDbContext))]
    [Migration("20250902121616_SeedTimeSlots")]
    partial class SeedTimeSlots
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BackEnd.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("TimeSlotsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TimeSlotsId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("BackEnd.Models.TimeSlots", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("endTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("startTime")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.ToTable("TimeSlots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = 2,
                            endTime = new TimeSpan(0, 10, 0, 0, 0),
                            startTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            Duration = 2,
                            endTime = new TimeSpan(0, 12, 0, 0, 0),
                            startTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            Duration = 2,
                            endTime = new TimeSpan(0, 14, 0, 0, 0),
                            startTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            Duration = 2,
                            endTime = new TimeSpan(0, 16, 0, 0, 0),
                            startTime = new TimeSpan(0, 14, 0, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            Duration = 4,
                            endTime = new TimeSpan(0, 12, 0, 0, 0),
                            startTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 6,
                            Duration = 4,
                            endTime = new TimeSpan(0, 16, 0, 0, 0),
                            startTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            Id = 7,
                            Duration = 8,
                            endTime = new TimeSpan(0, 16, 0, 0, 0),
                            startTime = new TimeSpan(0, 8, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("BackEnd.Models.Booking", b =>
                {
                    b.HasOne("BackEnd.Models.TimeSlots", null)
                        .WithMany("Bookings")
                        .HasForeignKey("TimeSlotsId");
                });

            modelBuilder.Entity("BackEnd.Models.TimeSlots", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
